{
    "contents" : "\n#Set directory and load csv file\n\nsetwd(\"D:/0 Stern MSBA/2.0 Pre-module 2 assignments/DMinR Assign2\")\n\nkidnap <- read.csv(\"D:/0 Stern MSBA/2.0 Pre-module 2 assignments/DMinR Assign2/kidnapping extract.csv\", \n                 header = TRUE)\nView(kidnap)\n\n#Clean Age data - convert to numeric, filter for <=15, add group\n#Unknown/NA are removed as age is a critical filter\n\nkidnap$Age2 <- as.character(kidnap$Age)\nunique(subset(kidnap$Age2, nchar(kidnap$Age2)>5))\nkidnap$Age2 <- gsub(\"00: Unknown\",NA,kidnap$Age2)\nkidnap$Age2 <- gsub(\"BB: 7-364 Days Old\",\"0\",kidnap$Age2)\nkidnap$Age2 <- gsub(\"NB: 1-6 Days Old\",\"0\",kidnap$Age2)\nkidnap$Age2 <- gsub(\"NN: Under 24 Hours (neonate)\",\"0\",kidnap$Age2)\nkidnap$Age2 <- gsub(\":\",\"\",kidnap$Age2)\nkidnap$Age2 <- as.numeric(kidnap$Age2, na.rm = TRUE)\n\nkidnap.c <- subset(kidnap, kidnap$Age2 <= 15)\nkidnap.c$AgeGroup <- cut(kidnap.c$Age2, \n                         breaks=c(-0.5,5.5,10.5,Inf), \n                         labels=c('0-5','6-10','11-15'))\nView(kidnap.c)\ncat(\"Mean of original data: \",mean(kidnap$Age2, na.rm=TRUE),\"\\n\")\ncat(\"Mean of filtered data: \",mean(kidnap.c$Age2, na.rm=TRUE),\"\\n\")\ntable(kidnap.c$AgeGroup)\n\nx = table(kidnap.c$AgeGroup)\nlbls <- paste(names(x), \"\\n\", x, sep=\"\")\npie(x, labels=lbls, main=\"Number by group\", col=rainbow(length(lbls)))\n\n#Create grouping of Relationship based on a mapping table\n\nrelate <- read.table(header=TRUE, stringsAsFactors = TRUE,\n                     text=\"'Relationship' 'RelateGroup'\n  ':?' NA\n  'AQ: Victim was Acquaintance' 'Known'\n  'BE: Victim was Babysittee (the baby)' 'Known'\n  'BG: Victim was Boyfriend/Girlfriend'\t'Family'\n  'CF: Victim was Child of Boyfriend/Girlfriend'\t'Family'\n  'CH: Victim was Child'\t'Family'\n  'FR: Victim was Friend'\t'Known'\n  'GC: Victim was Grandchild'\t'Family'\n  'NE: Victim was Neighbor'\t'Known'\n  'OF: Victim was Other Family Member'\t'Family'\n  'OK: Victim was Otherwise Known'\t'Known'\n  'RU: Relationship Unknown'\tNA\n  'SB: Victim was Sibling'\t'Family'\n  'SC: Victim was Stepchild'\t'Family'\n  'SE: Victim was Spouse'\t'Family'\n  'SP: Victim was Stepparent'\t'Family'\n  'SS: Victim was Stepsibling'\t'Family'\n  'ST: Victim was Stranger'\t'Stranger'\n  'VO: Victim was Offender'\t'Known'\")\n\nkidnap.c <- merge(kidnap.c, relate, by = 'Relationship')\nView(kidnap.c)\nrel <- ddply(subset(kidnap.c,!is.na(RelateGroup)),.(Relationship,RelateGroup), summarize, freq=length(Relationship))\nrel$col[rel$RelateGroup==\"Family\"]<-\"red\"\nrel$col[rel$RelateGroup==\"Known\"]<-\"green\"\nrel$col[rel$RelateGroup==\"Stranger\"]<-\"blue\"\nlayout(matrix(c(1,1,1,2), 1, 4, byrow = TRUE))\ndotchart(rel$freq, labels=rel$Relationship, cex=0.7, groups=rel$RelateGroup, col=rel$col, main=\"All Relationships\")\nbarplot(table(kidnap.c$RelateGroup), main=\"Relationship Groups\", col=rainbow(3))\n\n#Convert date string to date\n#This seems a lot easier in Excel\n#Add day of week and month Columns\n\nkidnap.c$Date2 <- gsub('([0-9]{4})([0-9]{2})([0-9]{2})$','\\\\1-\\\\2-\\\\3', kidnap.c$Incident.Date)\nkidnap.c$Date3 <- gsub('([0-9]{4})([0-9]{2})([0-9]{2})$','\\\\1-\\\\2', kidnap.c$Incident.Date)\nkidnap.c$Date2 <- as.Date(kidnap.c$Date2, '%Y-%m-%d')\nkidnap.c$Year <- as.integer(format(kidnap.c$Date2, '%Y'))\nkidnap.c$Month <- as.integer(format(kidnap.c$Date2, '%m'))\nkidnap.c$Day <- factor(weekdays(kidnap.c$Date2), \n                       levels=c(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"), \n                       ordered=TRUE)\n\ny<-xtabs(~Year+Month, data = kidnap.c)\nftable(y)\n\n#Data prep needed for plotting\n#top locations by sex of victim\ny<-as.data.frame(table(kidnap.c$Location))\nnames(y)=c(\"Location\",\"Count\")\ny<-subset(y,Location!=\"25: Other/unknown\")\ntopy<-y[rev(order(y$Count)),\"Location\"][1:5]\nsorty<-y[rev(order(y$Count)),\"Location\"][1:24]\nkidnap.c$LocGroup <- ifelse(kidnap.c$Location %in% topy, \"top\", \"no\" )\n\ny$Count[y$Location==topy[1]]\nsum(y$Count)\n\nggplot(data=Sex.loc, aes(x=ordered(Location,topy),y=freq, fill=Sex.of.Victim))+geom_bar(stat=\"identity\")+xlab(\"\")+ylab(\"Frequency\")+ggtitle(\"Incidents by Location\")+theme(axis.text.x=element_text(size=8),legend.justification=c(1,1),legend.position=c(1,1))\n\nView(kidnap.c)\n\n#Lets do some plotting\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)\ninstall.packages(\"plyr\")\nlibrary(plyr)\n\nMonth.year <- ddply(kidnap.c,.(Month,Year), summarize, freq=length(Month))\nDay <- ddply(kidnap.c,.(Day), summarize, freq=length(Day))\n\npar(mfrow=c(1,2))\nggplot(data=Month.year, aes(x=Month, y=freq, fill=Year))+geom_bar(stat=\"identity\") + ggtitle(\"Cases by Month\")\nggplot(data=Day, aes(x=Day, y=freq))+geom_bar(stat=\"identity\",fill=\"red\")+ggtitle(\"Cases by Day of Week\")\n\ntable(kidnap.c$Year,kidnap.c$State)\n\nhist(kidnap.c$Age2, xlab = \"Age\", ylab=\"Frequency\", main=\"Distribution by Age\")\n\nbarplot(table(kidnap.c$Year,kidnap.c$Month), legend.text=TRUE)\nbarplot(table(kidnap.c$State, kidnap.c$Date3), legend.text=TRUE, args.legend=list(x = \"topleft\"))\n\nMonth.year = ddply(kidnap.c,.(Month,Year), summarize, freq=length(Month))\nggplot(data=Month.year, aes(x=Month, y=freq, fill=Year))+geom_bar(stat=\"identity\")\n\nSex.loc <- ddply(subset(kidnap.c,LocGroup==\"top\" & Sex.of.Victim!=\"U: Unknown\"),.(Location,Sex.of.Victim), summarize, freq=length(Sex.of.Victim))\nggplot(data=Sex.loc, aes(x=ordered(Location,topy),y=freq, fill=Sex.of.Victim))+geom_bar(stat=\"identity\")\nAge.family <- ddply(subset(kidnap.c, !is.na(RelateGroup)), .(AgeGroup,RelateGroup), summarize, freq=length(AgeGroup))\nggplot(data=Age.family, aes(x=RelateGroup, y=freq, fill=AgeGroup))+geom_bar(stat=\"identity\") + ylab(\"Frequency\")+xlab(\"\")\n\nsummary(kidnap.c$State)\n\n",
    "created" : 1410222283728.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1809899919",
    "id" : "42A459DF",
    "lastKnownWriteTime" : 1405813830,
    "path" : "D:/0 Stern MSBA/2.1 datamining/kidnap.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}